/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import static DBConnection.MySQLConnection.deleteDistrict;
import static DBConnection.MySQLConnection.insertNewDistrict;
import static DBConnection.MySQLConnection.loadCantons;
import static DBConnection.MySQLConnection.loadCountries;
import static DBConnection.MySQLConnection.loadDistricts;
import static DBConnection.MySQLConnection.loadProvinces;
import static DBConnection.MySQLConnection.updateCanton;
import static DBConnection.MySQLConnection.updateDistrict;
import Utils.Global;
import javax.swing.JOptionPane;

/**
 *
 * @author mapac
 */
public class districtWindow extends javax.swing.JFrame {

    /**
     * Creates new form districtWindow
     */
    cataloguesWindow cataW;
    public districtWindow(cataloguesWindow cW) {
        Global.countriesInfo.clear();
        initComponents();
        fillCountriesComboBox();
        cataW = cW;
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }
    
    private void fillCountriesComboBox()
    {
        loadCountries();
        if (Global.getInfo_result == 1)
        {
            chooseCountry1.removeAllItems();
            chooseCountry2.removeAllItems();
            chooseCountry3.removeAllItems();
            for (int countryNumber = 0; countryNumber < Global.countriesInfo.size(); countryNumber++)
            {
                chooseCountry1.addItem(Global.countriesInfo.get(countryNumber).getName());
                chooseCountry2.addItem(Global.countriesInfo.get(countryNumber).getName());
                chooseCountry3.addItem(Global.countriesInfo.get(countryNumber).getName());
            }
        }
    }
    
    private void fillProvincesComboBox1(int country_id)
    {
        Global.provincesInfo.clear();
        loadProvinces(country_id);
        if (Global.getInfo_result == 1)
        {
            chooseProvince1.removeAllItems();
            for (int provinceNumber = 0; provinceNumber < Global.provincesInfo.size(); provinceNumber++)
            {
                chooseProvince1.addItem(Global.provincesInfo.get(provinceNumber).getName());
            }
        }
    }
    
    private void fillProvincesComboBox2(int country_id)
    {
        Global.provincesInfo.clear();
        loadProvinces(country_id);
        if (Global.getInfo_result == 1)
        {
            chooseProvince2.removeAllItems();
            for (int provinceNumber = 0; provinceNumber < Global.provincesInfo.size(); provinceNumber++)
            {
                chooseProvince2.addItem(Global.provincesInfo.get(provinceNumber).getName());
            }
        }
    }
    
    private void fillProvincesComboBox3(int country_id)
    {
        Global.provincesInfo.clear();
        loadProvinces(country_id);
        if (Global.getInfo_result == 1)
        {
            chooseProvince3.removeAllItems();
            for (int provinceNumber = 0; provinceNumber < Global.provincesInfo.size(); provinceNumber++)
            {
                chooseProvince3.addItem(Global.provincesInfo.get(provinceNumber).getName());
            }
        }
    }
    
    private void fillCantonsComboBox1(int id_province) {
        Global.cantonsInfo.clear();
        loadCantons(id_province);
        if (Global.getInfo_result == 1)
        {
            chooseCanton1.removeAllItems();
            for (int cantonNumber = 0; cantonNumber < Global.cantonsInfo.size(); cantonNumber++)
            {
                chooseCanton1.addItem(Global.cantonsInfo.get(cantonNumber).getName());
            }
        }
    }
    
    private void fillCantonsComboBox2(int id_province) {
        Global.cantonsInfo.clear();
        loadCantons(id_province);
        if (Global.getInfo_result == 1)
        {
            chooseCanton2.removeAllItems();
            for (int cantonNumber = 0; cantonNumber < Global.cantonsInfo.size(); cantonNumber++)
            {
                chooseCanton2.addItem(Global.cantonsInfo.get(cantonNumber).getName());
            }
        }
    }
    
    private void fillCantonsComboBox3(int id_province) {
        Global.cantonsInfo.clear();
        loadCantons(id_province);
        if (Global.getInfo_result == 1)
        {
            chooseCanton3.removeAllItems();
            for (int cantonNumber = 0; cantonNumber < Global.cantonsInfo.size(); cantonNumber++)
            {
                chooseCanton3.addItem(Global.cantonsInfo.get(cantonNumber).getName());
            }
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        addTitle = new javax.swing.JLabel();
        chooseCPC = new javax.swing.JLabel();
        newDistrcit = new javax.swing.JLabel();
        eliminateTitle = new javax.swing.JLabel();
        chooseCPC2 = new javax.swing.JLabel();
        eliminateDistrict = new javax.swing.JLabel();
        modifyTitle = new javax.swing.JLabel();
        chooseCPC3 = new javax.swing.JLabel();
        modifyDistrictLabel = new javax.swing.JLabel();
        newNameLabel = new javax.swing.JLabel();
        addButton = new javax.swing.JButton();
        eliminateButton = new javax.swing.JButton();
        modifyButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        chooseCanton2 = new javax.swing.JComboBox<>();
        chooseCountry3 = new javax.swing.JComboBox<>();
        chooseCanton3 = new javax.swing.JComboBox<>();
        chooseCountry1 = new javax.swing.JComboBox<>();
        chooseProvince1 = new javax.swing.JComboBox<>();
        chooseCanton1 = new javax.swing.JComboBox<>();
        chooseCountry2 = new javax.swing.JComboBox<>();
        chooseProvince2 = new javax.swing.JComboBox<>();
        chooseProvince3 = new javax.swing.JComboBox<>();
        newNameField = new javax.swing.JTextField();
        newDistrict = new javax.swing.JTextField();
        modifyDistrict = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        modifyDistrict1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(778, 587));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(783, 587));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        addTitle.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        addTitle.setText("Agregar");
        jPanel1.add(addTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 80, 20));

        chooseCPC.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        chooseCPC.setText("Elegir país, provincia y cantón");
        jPanel1.add(chooseCPC, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 200, 20));

        newDistrcit.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        newDistrcit.setText("Nuevo distrito");
        jPanel1.add(newDistrcit, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, -1));

        eliminateTitle.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        eliminateTitle.setText("Eliminar");
        jPanel1.add(eliminateTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 90, -1));

        chooseCPC2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        chooseCPC2.setText("Elegir país, provincia y cantón");
        jPanel1.add(chooseCPC2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 190, 20));

        eliminateDistrict.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        eliminateDistrict.setText("Distrito a eliminar");
        jPanel1.add(eliminateDistrict, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 240, -1, -1));

        modifyTitle.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        modifyTitle.setText("Modificar");
        jPanel1.add(modifyTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, -1, -1));

        chooseCPC3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        chooseCPC3.setText("Elegir país, provincia y cantón");
        jPanel1.add(chooseCPC3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 190, 20));

        modifyDistrictLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        modifyDistrictLabel.setText("Distrito a modificar");
        jPanel1.add(modifyDistrictLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, -1, -1));

        newNameLabel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        newNameLabel.setText("Nuevo nombre");
        jPanel1.add(newNameLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 460, -1, -1));

        addButton.setBackground(new java.awt.Color(8, 151, 157));
        addButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        addButton.setForeground(new java.awt.Color(255, 255, 255));
        addButton.setText("Agregar");
        addButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        addButton.setPreferredSize(new java.awt.Dimension(89, 25));
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addButtonMouseClicked(evt);
            }
        });
        jPanel1.add(addButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 130, -1, -1));

        eliminateButton.setBackground(new java.awt.Color(8, 151, 157));
        eliminateButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        eliminateButton.setForeground(new java.awt.Color(255, 255, 255));
        eliminateButton.setText("Eliminar");
        eliminateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        eliminateButton.setPreferredSize(new java.awt.Dimension(89, 25));
        eliminateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eliminateButtonMouseClicked(evt);
            }
        });
        jPanel1.add(eliminateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 290, -1, -1));

        modifyButton.setBackground(new java.awt.Color(8, 151, 157));
        modifyButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        modifyButton.setForeground(new java.awt.Color(255, 255, 255));
        modifyButton.setText("Modificar");
        modifyButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        modifyButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                modifyButtonMouseClicked(evt);
            }
        });
        jPanel1.add(modifyButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 510, -1, -1));

        cancelButton.setBackground(new java.awt.Color(132, 116, 161));
        cancelButton.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cancelButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelButton.setText("Cancelar");
        cancelButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cancelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelButtonMouseClicked(evt);
            }
        });
        jPanel1.add(cancelButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 550, -1, -1));

        chooseCanton2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        chooseCanton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chooseCanton2.setMinimumSize(new java.awt.Dimension(130, 21));
        chooseCanton2.setPreferredSize(new java.awt.Dimension(130, 21));
        chooseCanton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseCanton2ActionPerformed(evt);
            }
        });
        jPanel1.add(chooseCanton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 200, -1, -1));

        chooseCountry3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        chooseCountry3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chooseCountry3.setMinimumSize(new java.awt.Dimension(130, 21));
        chooseCountry3.setPreferredSize(new java.awt.Dimension(130, 21));
        chooseCountry3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseCountry3ActionPerformed(evt);
            }
        });
        jPanel1.add(chooseCountry3, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 380, -1, -1));

        chooseCanton3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        chooseCanton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chooseCanton3.setMinimumSize(new java.awt.Dimension(130, 21));
        chooseCanton3.setPreferredSize(new java.awt.Dimension(130, 21));
        chooseCanton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseCanton3ActionPerformed(evt);
            }
        });
        jPanel1.add(chooseCanton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 380, -1, -1));

        chooseCountry1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        chooseCountry1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chooseCountry1.setMinimumSize(new java.awt.Dimension(130, 21));
        chooseCountry1.setPreferredSize(new java.awt.Dimension(130, 21));
        chooseCountry1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseCountry1ActionPerformed(evt);
            }
        });
        jPanel1.add(chooseCountry1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 40, -1, 20));

        chooseProvince1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        chooseProvince1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chooseProvince1.setMinimumSize(new java.awt.Dimension(130, 21));
        chooseProvince1.setPreferredSize(new java.awt.Dimension(130, 21));
        chooseProvince1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseProvince1ActionPerformed(evt);
            }
        });
        jPanel1.add(chooseProvince1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 40, -1, -1));

        chooseCanton1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        chooseCanton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chooseCanton1.setMinimumSize(new java.awt.Dimension(130, 21));
        chooseCanton1.setPreferredSize(new java.awt.Dimension(130, 21));
        jPanel1.add(chooseCanton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 40, -1, -1));

        chooseCountry2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        chooseCountry2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chooseCountry2.setMinimumSize(new java.awt.Dimension(130, 21));
        chooseCountry2.setPreferredSize(new java.awt.Dimension(130, 21));
        chooseCountry2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseCountry2ActionPerformed(evt);
            }
        });
        jPanel1.add(chooseCountry2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 200, -1, -1));

        chooseProvince2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        chooseProvince2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chooseProvince2.setMinimumSize(new java.awt.Dimension(130, 21));
        chooseProvince2.setPreferredSize(new java.awt.Dimension(130, 21));
        chooseProvince2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseProvince2ActionPerformed(evt);
            }
        });
        jPanel1.add(chooseProvince2, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 200, -1, -1));

        chooseProvince3.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        chooseProvince3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chooseProvince3.setMinimumSize(new java.awt.Dimension(130, 21));
        chooseProvince3.setPreferredSize(new java.awt.Dimension(130, 21));
        chooseProvince3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseProvince3ActionPerformed(evt);
            }
        });
        jPanel1.add(chooseProvince3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 380, -1, -1));

        newNameField.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        newNameField.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        newNameField.setPreferredSize(new java.awt.Dimension(130, 21));
        jPanel1.add(newNameField, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 460, -1, -1));

        newDistrict.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        newDistrict.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        newDistrict.setPreferredSize(new java.awt.Dimension(130, 21));
        jPanel1.add(newDistrict, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, -1, -1));

        modifyDistrict.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        modifyDistrict.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(modifyDistrict, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 240, 130, -1));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/district.png"))); // NOI18N
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 10, 110, 90));

        modifyDistrict1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        modifyDistrict1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(modifyDistrict1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 420, 130, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseClicked
        int id_canton = Global.cantonsInfo.get(chooseCanton1.getSelectedIndex()).getId();
        String newDistrictName = newDistrict.getText();
        if (!"".equals(newDistrictName) && !Global.isNumeric(newDistrictName) && !Global.hasNumbers(newDistrictName))
        {
            insertNewDistrict(id_canton,newDistrictName);
            if (Global.insert_result == 1) JOptionPane.showMessageDialog(this,"Nuevo distrito ha sido agregado al catálogo","Modificación exitosa",JOptionPane.INFORMATION_MESSAGE);
            else JOptionPane.showMessageDialog(this,"Error al insertar el distrito","Error de inserción",JOptionPane.ERROR_MESSAGE);
        }
        else JOptionPane.showMessageDialog(this,"Error al insertar el distrito","Error de inserción",JOptionPane.ERROR_MESSAGE);
        
        cataW.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_addButtonMouseClicked

    private void eliminateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eliminateButtonMouseClicked
        int id_canton = Global.cantonsInfo.get(chooseCanton1.getSelectedIndex()).getId();
        int district_id = Global.districtsInfo.get(modifyDistrict.getSelectedIndex()).getId();
        String district_name = Global.districtsInfo.get(modifyDistrict.getSelectedIndex()).getName();
        deleteDistrict(id_canton,district_name,district_id);
        if (Global.delete_result == 1) JOptionPane.showMessageDialog(this,"El distrito ha sido eliminado","Borrado exitoso",JOptionPane.INFORMATION_MESSAGE);
        else JOptionPane.showMessageDialog(this,"Error al eliminar el distrito","Error de borrado",JOptionPane.ERROR_MESSAGE);
        cataW.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_eliminateButtonMouseClicked

    private void modifyButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_modifyButtonMouseClicked
        int id_canton = Global.cantonsInfo.get(chooseCanton3.getSelectedIndex()).getId();
        String district_name = Global.districtsInfo.get(modifyDistrict1.getSelectedIndex()).getName();
        int district_id = Global.districtsInfo.get(modifyDistrict1.getSelectedIndex()).getId();
        String newDistrictName = newNameField.getText();
        if (!"".equals(newDistrictName) && !Global.isNumeric(newDistrictName) && !Global.hasNumbers(newDistrictName))
        {
            updateDistrict(id_canton,district_name,district_id,newDistrictName);
            if (Global.update_result == 1) JOptionPane.showMessageDialog(this,"El nombre del distrito ha sido modificado","Modificación exitosa",JOptionPane.INFORMATION_MESSAGE);
            else JOptionPane.showMessageDialog(this,"Error al modificar el distrito","Error de modificación",JOptionPane.ERROR_MESSAGE);
        }
        else JOptionPane.showMessageDialog(this,"Error al modificar el distrito","Error de modificación",JOptionPane.ERROR_MESSAGE);
        
        cataW.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_modifyButtonMouseClicked

    private void cancelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelButtonMouseClicked
        cataW.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_cancelButtonMouseClicked

    private void chooseCountry1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseCountry1ActionPerformed
        fillProvincesComboBox1(Global.countriesInfo.get(chooseCountry1.getSelectedIndex()).getId());
    }//GEN-LAST:event_chooseCountry1ActionPerformed

    private void chooseCountry2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseCountry2ActionPerformed
        fillProvincesComboBox2(Global.countriesInfo.get(chooseCountry2.getSelectedIndex()).getId());
    }//GEN-LAST:event_chooseCountry2ActionPerformed

    private void chooseCountry3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseCountry3ActionPerformed
        fillProvincesComboBox3(Global.countriesInfo.get(chooseCountry3.getSelectedIndex()).getId());
    }//GEN-LAST:event_chooseCountry3ActionPerformed

    private void chooseProvince1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseProvince1ActionPerformed
        fillCantonsComboBox1(Global.provincesInfo.get(chooseProvince1.getSelectedIndex()).getId());
    }//GEN-LAST:event_chooseProvince1ActionPerformed

    private void chooseProvince2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseProvince2ActionPerformed
        fillCantonsComboBox2(Global.provincesInfo.get(chooseProvince2.getSelectedIndex()).getId());
    }//GEN-LAST:event_chooseProvince2ActionPerformed

    private void chooseProvince3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseProvince3ActionPerformed
        fillCantonsComboBox3(Global.provincesInfo.get(chooseProvince3.getSelectedIndex()).getId());
    }//GEN-LAST:event_chooseProvince3ActionPerformed

    private void chooseCanton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseCanton2ActionPerformed
        fillDistrictsComboBox1(Global.cantonsInfo.get(chooseCanton2.getSelectedIndex()).getId());
    }//GEN-LAST:event_chooseCanton2ActionPerformed

    private void chooseCanton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseCanton3ActionPerformed
        fillDistrictsComboBox2(Global.cantonsInfo.get(chooseCanton3.getSelectedIndex()).getId());
    }//GEN-LAST:event_chooseCanton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JLabel addTitle;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel chooseCPC;
    private javax.swing.JLabel chooseCPC2;
    private javax.swing.JLabel chooseCPC3;
    private javax.swing.JComboBox<String> chooseCanton1;
    private javax.swing.JComboBox<String> chooseCanton2;
    private javax.swing.JComboBox<String> chooseCanton3;
    private javax.swing.JComboBox<String> chooseCountry1;
    private javax.swing.JComboBox<String> chooseCountry2;
    private javax.swing.JComboBox<String> chooseCountry3;
    private javax.swing.JComboBox<String> chooseProvince1;
    private javax.swing.JComboBox<String> chooseProvince2;
    private javax.swing.JComboBox<String> chooseProvince3;
    private javax.swing.JButton eliminateButton;
    private javax.swing.JLabel eliminateDistrict;
    private javax.swing.JLabel eliminateTitle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton modifyButton;
    private javax.swing.JComboBox<String> modifyDistrict;
    private javax.swing.JComboBox<String> modifyDistrict1;
    private javax.swing.JLabel modifyDistrictLabel;
    private javax.swing.JLabel modifyTitle;
    private javax.swing.JLabel newDistrcit;
    private javax.swing.JTextField newDistrict;
    private javax.swing.JTextField newNameField;
    private javax.swing.JLabel newNameLabel;
    // End of variables declaration//GEN-END:variables

    private void fillDistrictsComboBox1(int id_canton) {
        Global.districtsInfo.clear();
        loadDistricts(id_canton);
        if (Global.getInfo_result == 1)
        {
            modifyDistrict.removeAllItems();
            for (int districtNumber = 0; districtNumber < Global.districtsInfo.size(); districtNumber++)
            {
                modifyDistrict.addItem(Global.districtsInfo.get(districtNumber).getName());
            }
        }
    }
    
    private void fillDistrictsComboBox2(int id_canton) {
        Global.districtsInfo.clear();
        loadDistricts(id_canton);
        if (Global.getInfo_result == 1)
        {
            modifyDistrict1.removeAllItems();
            for (int districtNumber = 0; districtNumber < Global.districtsInfo.size(); districtNumber++)
            {
                modifyDistrict1.addItem(Global.districtsInfo.get(districtNumber).getName());
            }
        }
    }
}
